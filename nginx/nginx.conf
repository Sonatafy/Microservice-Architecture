server {
    listen 80;
    server_name localhost;

    # Access log configuration
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Increase timeouts for longer API requests
    proxy_connect_timeout 300s;
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;

    # Health check endpoint
    location /health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"ok","service":"nginx","timestamp":"$time_iso8601"}';
    }

    # API traffic to API service
    location /api/ {
        # Using a resolver ensures the hostname is resolved at runtime
        resolver 127.0.0.11 valid=30s;
        set $upstream_api api-service:3000;
        
        proxy_pass http://$upstream_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Add a unique request ID
        proxy_set_header X-Request-ID $request_id;
        
        # Enable keep-alive (important for performance)
        proxy_set_header Connection "";
    }

    # Swagger documentation
    location /api-docs {
        resolver 127.0.0.11 valid=30s;
        set $upstream_api api-service:3000;
        
        proxy_pass http://$upstream_api/api-docs;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Serve frontend for root and other paths
    location / {
        resolver 127.0.0.11 valid=30s;
        set $upstream_frontend frontend:8080;
        
        proxy_pass http://$upstream_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Error handling
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
